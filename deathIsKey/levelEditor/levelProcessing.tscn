[gd_scene load_steps=7 format=2]

[ext_resource path="res://assets/tilesets/tileset.tres" type="TileSet" id=1]
[ext_resource path="res://Scenes/lpTeleporter.tscn" type="PackedScene" id=2]
[ext_resource path="res://Scenes/Player.tscn" type="PackedScene" id=3]

[sub_resource type="GDScript" id=1]
script/source = "tool
extends Node2D

export var level=\"\"
export var lvl_name=\"\"

export var opened=true
export var saved=true

func saveLevel():
	var tilemap = get_node(\"Level\")
	
	var file = File.new()
	file.open(level,file.WRITE)
	var content = \"name:\\\"\"+lvl_name+\"\\\";\"
	content+=\"\\nteleporter_destination_folder:\\\"\"+get_node(\"Teleporter\").folder+\"\\\";\"
	content+=\"\\nteleporter_destination:\\\"\"+get_node(\"Teleporter\").level+\"\\\";\"
	content+=\"\\nteleporter_pos:vec2(\"+String(get_node(\"Teleporter\").position.x)+\",\"+String(get_node(\"Teleporter\").position.y)+\");\"
	content+=\"\\nplayer_spawn:vec2(\"+String(get_node(\"Player\").position.x)+\",\"+String(get_node(\"Player\").position.y)+\");\"
	content+=\"\\ntilemap_offset:vec2(\"+String(tilemap.offset.x)+\",\"+String(tilemap.offset.y)+\");\"
	content+=\"\\ntilemap_size:vec2(\"+String(tilemap.width)+\",\"+String(tilemap.height)+\");\"
	content+=\"\\nspikes:{\"
	var i=0
	for node in get_children():
		if i>0:
			content+=\",\"
		if node.get_filename() == \"res://Scenes/Spike.tscn\":
			i+=1
			content+=\"default(\"+String(node.position.x)+\",\"+String(node.position.y)+\",\"+String(node.rotation_degrees)+\")\"
		elif node.get_filename() == \"res://Scenes/SwitchSpike.tscn\":
			i+=1
			content+=\"switch(\"+String(node.position.x)+\",\"+String(node.position.y)+\",\"+String(node.rotation_degrees)+\",\"+String(node.destroySelf)
			for s in node.switchableScene:
				content+=\",\\\"\"+s+\"\\\"\"
			content+=\")\"
	content+=\"};\"
	
	content+=\"\\ntilemap_map:{\"
	for i in Array(tilemap.map).size():
		content+=tilemap.map[i]
		if i<tilemap.width*tilemap.height:
			content+=\",\"
	content+=\"};\"
	
	#content+=\"\\nspikes:{default(64,80,0),default(80,80,0),default(96,80,0)};\"
	file.store_string(content)

func makeLevel():
	for node in get_children():
		if !(((node.name == \"Background\" or node.name==\"Level\") and node.get_class() == \"TileMap\") or (node.name == \"Player\" and node.get_filename()==\"res://Scenes/Player.tscn\") or (node.name == \"Teleporter\" and node.get_filename()==\"res://Scenes/lpTeleporter.tscn\")):
			node.queue_free()
	
	var tilemap = get_node(\"Level\")
	
	var file = File.new()
	file.open(level,file.READ)
	var content = file.get_as_text()
	#content = content.replace(\"\",\"\")
	#var lines = content.split(\";\")
	var lines = content.split(\"\\n\")
	for l in lines:
		for line in l.split(\";\"):
			if !line.begins_with(\"//\") and !line.begins_with(\" //\"):
				if !line.empty():
					var variable = line.split(\":\")
					
					var vvec
					var varr=[]
					var varrpos=[]
					var varrrot=[]
					var varNeedsString=[]
					var varString=[]
					var varrbool=[]
					
					if variable[1].begins_with(\"vec2\"):
						variable[1] = variable[1].replace(\"vec2(\",\"\")
						variable[1] = variable[1].replace(\")\",\"\")
						vvec=Vector2(variable[1].split(\",\")[0],variable[1].split(\",\")[1])
					elif variable[1].begins_with(\"vec3\"):
						variable[1] = variable[1].replace(\"vec3(\",\"\")
						variable[1] = variable[1].replace(\")\",\"\")
						vvec=Vector3(variable[1].split(\",\")[0],variable[1].split(\",\")[1],variable[1].split(\",\")[2])
					elif variable[1].begins_with(\"{\"):
						variable[1] = variable[1].replace(\"{\",\"\")
						variable[1] = variable[1].replace(\"}\",\"\")
						var temp = variable[1].split(\",\")
						temp = Array(temp)
						for t in temp:
							if \"default\" in t:
								var v = load(\"res://Scenes/Spike.tscn\")
								varrpos.append(Vector2(temp[temp.find(t)].replace(\"default(\",\"\"),temp[temp.find(t)+1]))
								varr.append(v)
								varrrot.append(int(temp[temp.find(t)+2].replace(\")\",\"\")))
								varNeedsString.append(false)
								varString.append(\"\")
							elif \"switch\" in t:
								var v = load(\"res://Scenes/SwitchSpike.tscn\")
								varrpos.append(Vector2(temp[temp.find(t)].replace(\"switch(\",\"\"),temp[temp.find(t)+1]))
								varr.append(v)
								varrrot.append(int(temp[temp.find(t)+2]))
								varrbool.append((temp[temp.find(t)+3])==\"True\")
								varNeedsString.append(true)
								varString.append([])
								var i = 4
								while !(\")\" in temp[temp.find(t)+i]):
									varString[i-4].append(temp[temp.find(t)+i].replace(\"\\\"\",\"\"))
									i+=1
								varString[i-5].append(temp[temp.find(t)+i].replace(\")\",\"\").replace(\"\\\"\",\"\"))
								#varString.append(temp[temp.find(t)+3].replace(\"\\\"\",\"\").replace(\")\",\"\"))
							else:
								if variable[0]!=\"spikes\":
									varr.append(t)
					
					if variable[0]==\"name\":
						lvl_name = variable[1].replace(\"\\\"\",\"\")
					elif variable[0]==\"teleporter_destination\":
						get_node(\"Teleporter\").level=variable[1].replace(\"\\\"\",\"\")
					elif variable[0]==\"teleporter_pos\":
						get_node(\"Teleporter\").position=vvec
					elif variable[0]==\"player_spawn\":
						get_node(\"Player\").position=vvec
						get_node(\"Player\").spawn=vvec
					elif variable[0]==\"tilemap_offset\":
						tilemap.offset=vvec
					elif variable[0]==\"tilemap_size\":
						tilemap.width=vvec.x
						tilemap.height=vvec.y
					elif variable[0]==\"tilemap_map\":
						tilemap.map=varr
						tilemap.changed=true
					elif variable[0]==\"spikes\":
						for i in varr.size():
							var scene_instance = varr[i].instance()
							scene_instance.set_name(\"spike\"+String(i))
							scene_instance.position = varrpos[i]
							scene_instance.rotation = varrrot[i]
							if varNeedsString[i]:
								scene_instance.destroySelf=varrbool[i]
								for li in varString[i].size():
									scene_instance.switchableScene=varString[i]
							add_child(scene_instance)
							scene_instance.set_owner(get_tree().get_edited_scene_root())

func _ready():
	if !Engine.editor_hint:
		opened=false
		if levelPath.ready:
			level=\"../deathIsKeyLevels/\"+levelPath.levels[levelPath.nextLevel]
			opened=true
			makeLevel()

var added=false

func _process(delta):
	if Input.is_action_just_pressed(\"lclick\"):
		saved=false
	
	if opened and !added:
		#if get_node(\"Teleporter\").isSet:
			added=true
			levelPath.nextLevel+=1
			if levelPath.nextLevel==levelPath.levels.size():
				levelPath.nextLevel=0
	if !opened:
		level=\"../deathIsKeyLevels/\"+levelPath.levels[levelPath.nextLevel]
		makeLevel()
		opened=true
	if !saved:
		saveLevel()
		saved=true
"

[sub_resource type="GDScript" id=2]
script/source = "tool
extends TileMap

func _ready():
	pass

func _process(delta):
	if get_node(\"..\").get_node(\"Level\").changed:
		var tilemap = get_node(\"..\").get_node(\"Level\")
		tilemap.changed=false
		for x in tilemap.width:
			for y in tilemap.height:
				set_cell(x+tilemap.offset.x,y+tilemap.offset.y,5)"

[sub_resource type="GDScript" id=3]
script/source = "tool
extends TileMap

var width=24
var height=14
var offset=Vector2(-1,-1)

func _ready():
	pass

var changed=true
var map=[]

func _process(delta):
	if changed:
		for x in width:
			for y in height:
				set_cell(x+offset.x,y+offset.y,int((map[x+y*width])))
				update_bitmask_area(Vector2(x,y)+offset)"

[node name="Level" type="Node2D"]
script = SubResource( 1 )
level = "C:\\GoDot\\deathIsKey\\levelEditor\\levels\\lvl1.zmap"
lvl_name = "lvl1"
opened = false

[node name="Background" type="TileMap" parent="."]
modulate = Color( 0.490196, 0.490196, 0.490196, 1 )
tile_set = ExtResource( 1 )
cell_size = Vector2( 8, 8 )
format = 1
tile_data = PoolIntArray( -1, 5, 0, -65536, 5, 0, -65535, 5, 0, -65534, 5, 0, -65533, 5, 0, -65532, 5, 0, -65531, 5, 0, -65530, 5, 0, -65529, 5, 0, -65528, 5, 0, -65527, 5, 0, -65526, 5, 0, -65525, 5, 0, -65524, 5, 0, -65523, 5, 0, -65522, 5, 0, -65521, 5, 0, -65520, 5, 0, -65519, 5, 0, -65518, 5, 0, -65517, 5, 0, -65516, 5, 0, -65515, 5, 0, -65514, 5, 0, 65535, 5, 0, 0, 5, 0, 1, 5, 0, 2, 5, 0, 3, 5, 0, 4, 5, 0, 5, 5, 0, 6, 5, 0, 7, 5, 0, 8, 5, 0, 9, 5, 0, 10, 5, 0, 11, 5, 0, 12, 5, 0, 13, 5, 0, 14, 5, 0, 15, 5, 0, 16, 5, 0, 17, 5, 0, 18, 5, 0, 19, 5, 0, 20, 5, 0, 21, 5, 0, 22, 5, 0, 131071, 5, 0, 65536, 5, 0, 65537, 5, 0, 65538, 5, 0, 65539, 5, 0, 65540, 5, 0, 65541, 5, 0, 65542, 5, 0, 65543, 5, 0, 65544, 5, 0, 65545, 5, 0, 65546, 5, 0, 65547, 5, 0, 65548, 5, 0, 65549, 5, 0, 65550, 5, 0, 65551, 5, 0, 65552, 5, 0, 65553, 5, 0, 65554, 5, 0, 65555, 5, 0, 65556, 5, 0, 65557, 5, 0, 65558, 5, 0, 196607, 5, 0, 131072, 5, 0, 131073, 5, 0, 131074, 5, 0, 131075, 5, 0, 131076, 5, 0, 131077, 5, 0, 131078, 5, 0, 131079, 5, 0, 131080, 5, 0, 131081, 5, 0, 131082, 5, 0, 131083, 5, 0, 131084, 5, 0, 131085, 5, 0, 131086, 5, 0, 131087, 5, 0, 131088, 5, 0, 131089, 5, 0, 131090, 5, 0, 131091, 5, 0, 131092, 5, 0, 131093, 5, 0, 131094, 5, 0, 262143, 5, 0, 196608, 5, 0, 196609, 5, 0, 196610, 5, 0, 196611, 5, 0, 196612, 5, 0, 196613, 5, 0, 196614, 5, 0, 196615, 5, 0, 196616, 5, 0, 196617, 5, 0, 196618, 5, 0, 196619, 5, 0, 196620, 5, 0, 196621, 5, 0, 196622, 5, 0, 196623, 5, 0, 196624, 5, 0, 196625, 5, 0, 196626, 5, 0, 196627, 5, 0, 196628, 5, 0, 196629, 5, 0, 196630, 5, 0, 327679, 5, 0, 262144, 5, 0, 262145, 5, 0, 262146, 5, 0, 262147, 5, 0, 262148, 5, 0, 262149, 5, 0, 262150, 5, 0, 262151, 5, 0, 262152, 5, 0, 262153, 5, 0, 262154, 5, 0, 262155, 5, 0, 262156, 5, 0, 262157, 5, 0, 262158, 5, 0, 262159, 5, 0, 262160, 5, 0, 262161, 5, 0, 262162, 5, 0, 262163, 5, 0, 262164, 5, 0, 262165, 5, 0, 262166, 5, 0, 393215, 5, 0, 327680, 5, 0, 327681, 5, 0, 327682, 5, 0, 327683, 5, 0, 327684, 5, 0, 327685, 5, 0, 327686, 5, 0, 327687, 5, 0, 327688, 5, 0, 327689, 5, 0, 327690, 5, 0, 327691, 5, 0, 327692, 5, 0, 327693, 5, 0, 327694, 5, 0, 327695, 5, 0, 327696, 5, 0, 327697, 5, 0, 327698, 5, 0, 327699, 5, 0, 327700, 5, 0, 327701, 5, 0, 327702, 5, 0, 458751, 5, 0, 393216, 5, 0, 393217, 5, 0, 393218, 5, 0, 393219, 5, 0, 393220, 5, 0, 393221, 5, 0, 393222, 5, 0, 393223, 5, 0, 393224, 5, 0, 393225, 5, 0, 393226, 5, 0, 393227, 5, 0, 393228, 5, 0, 393229, 5, 0, 393230, 5, 0, 393231, 5, 0, 393232, 5, 0, 393233, 5, 0, 393234, 5, 0, 393235, 5, 0, 393236, 5, 0, 393237, 5, 0, 393238, 5, 0, 524287, 5, 0, 458752, 5, 0, 458753, 5, 0, 458754, 5, 0, 458755, 5, 0, 458756, 5, 0, 458757, 5, 0, 458758, 5, 0, 458759, 5, 0, 458760, 5, 0, 458761, 5, 0, 458762, 5, 0, 458763, 5, 0, 458764, 5, 0, 458765, 5, 0, 458766, 5, 0, 458767, 5, 0, 458768, 5, 0, 458769, 5, 0, 458770, 5, 0, 458771, 5, 0, 458772, 5, 0, 458773, 5, 0, 458774, 5, 0, 589823, 5, 0, 524288, 5, 0, 524289, 5, 0, 524290, 5, 0, 524291, 5, 0, 524292, 5, 0, 524293, 5, 0, 524294, 5, 0, 524295, 5, 0, 524296, 5, 0, 524297, 5, 0, 524298, 5, 0, 524299, 5, 0, 524300, 5, 0, 524301, 5, 0, 524302, 5, 0, 524303, 5, 0, 524304, 5, 0, 524305, 5, 0, 524306, 5, 0, 524307, 5, 0, 524308, 5, 0, 524309, 5, 0, 524310, 5, 0, 655359, 5, 0, 589824, 5, 0, 589825, 5, 0, 589826, 5, 0, 589827, 5, 0, 589828, 5, 0, 589829, 5, 0, 589830, 5, 0, 589831, 5, 0, 589832, 5, 0, 589833, 5, 0, 589834, 5, 0, 589835, 5, 0, 589836, 5, 0, 589837, 5, 0, 589838, 5, 0, 589839, 5, 0, 589840, 5, 0, 589841, 5, 0, 589842, 5, 0, 589843, 5, 0, 589844, 5, 0, 589845, 5, 0, 589846, 5, 0, 720895, 5, 0, 655360, 5, 0, 655361, 5, 0, 655362, 5, 0, 655363, 5, 0, 655364, 5, 0, 655365, 5, 0, 655366, 5, 0, 655367, 5, 0, 655368, 5, 0, 655369, 5, 0, 655370, 5, 0, 655371, 5, 0, 655372, 5, 0, 655373, 5, 0, 655374, 5, 0, 655375, 5, 0, 655376, 5, 0, 655377, 5, 0, 655378, 5, 0, 655379, 5, 0, 655380, 5, 0, 655381, 5, 0, 655382, 5, 0, 786431, 5, 0, 720896, 5, 0, 720897, 5, 0, 720898, 5, 0, 720899, 5, 0, 720900, 5, 0, 720901, 5, 0, 720902, 5, 0, 720903, 5, 0, 720904, 5, 0, 720905, 5, 0, 720906, 5, 0, 720907, 5, 0, 720908, 5, 0, 720909, 5, 0, 720910, 5, 0, 720911, 5, 0, 720912, 5, 0, 720913, 5, 0, 720914, 5, 0, 720915, 5, 0, 720916, 5, 0, 720917, 5, 0, 720918, 5, 0, 851967, 5, 0, 786432, 5, 0, 786433, 5, 0, 786434, 5, 0, 786435, 5, 0, 786436, 5, 0, 786437, 5, 0, 786438, 5, 0, 786439, 5, 0, 786440, 5, 0, 786441, 5, 0, 786442, 5, 0, 786443, 5, 0, 786444, 5, 0, 786445, 5, 0, 786446, 5, 0, 786447, 5, 0, 786448, 5, 0, 786449, 5, 0, 786450, 5, 0, 786451, 5, 0, 786452, 5, 0, 786453, 5, 0, 786454, 5, 0 )
script = SubResource( 2 )

[node name="Level" type="TileMap" parent="."]
tile_set = ExtResource( 1 )
cell_size = Vector2( 8, 8 )
format = 1
tile_data = PoolIntArray( -1, 0, 65537, -65536, 0, 65538, -65535, 0, 65538, -65534, 0, 65538, -65533, 0, 65538, -65532, 0, 65538, -65531, 0, 65538, -65530, 0, 65538, -65529, 0, 65538, -65528, 0, 65538, -65527, 0, 65538, -65526, 0, 65538, -65525, 0, 65538, -65524, 0, 65538, -65523, 0, 65538, -65522, 0, 65538, -65521, 0, 65538, -65520, 0, 65538, -65519, 0, 65538, -65518, 0, 65538, -65517, 0, 65538, -65516, 0, 65538, -65515, 0, 65538, -65514, 0, 65539, 65535, 0, 131073, 0, 0, 131074, 1, 0, 131074, 2, 0, 131074, 3, 0, 131074, 4, 0, 131074, 5, 0, 131074, 6, 0, 131074, 7, 0, 131074, 8, 0, 131074, 9, 0, 131074, 10, 0, 131074, 11, 0, 131074, 12, 0, 131074, 13, 0, 131074, 14, 0, 131074, 15, 0, 131074, 16, 0, 131074, 17, 0, 131074, 18, 0, 131074, 19, 0, 131074, 20, 0, 131074, 21, 0, 131074, 22, 0, 131075, 131071, 0, 131073, 65536, 0, 131074, 65537, 0, 131074, 65538, 0, 131074, 65539, 0, 131074, 65540, 0, 131074, 65541, 0, 131074, 65542, 0, 131074, 65543, 0, 131074, 65544, 0, 131074, 65545, 0, 131074, 65546, 0, 131074, 65547, 0, 131074, 65548, 0, 131074, 65549, 0, 131074, 65550, 0, 131074, 65551, 0, 131074, 65552, 0, 131074, 65553, 0, 131074, 65554, 0, 131074, 65555, 0, 131074, 65556, 0, 131074, 65557, 0, 131074, 65558, 0, 131075, 196607, 0, 131073, 131072, 0, 4, 131073, 0, 196610, 131074, 0, 196610, 131075, 0, 196610, 131076, 0, 196610, 131077, 0, 196610, 131078, 0, 196610, 131079, 0, 196610, 131080, 0, 196610, 131081, 0, 196610, 131082, 0, 196610, 131083, 0, 196610, 131084, 0, 196610, 131085, 0, 196610, 131086, 0, 196610, 131087, 0, 196610, 131088, 0, 196610, 131089, 0, 196610, 131090, 0, 196610, 131091, 0, 5, 131092, 0, 131074, 131093, 0, 131074, 131094, 0, 131075, 262143, 0, 131073, 196608, 0, 131075, 196627, 0, 131073, 196628, 0, 131074, 196629, 0, 131074, 196630, 0, 131075, 327679, 0, 131073, 262144, 0, 131075, 262163, 0, 131073, 262164, 0, 131074, 262165, 0, 131074, 262166, 0, 131075, 393215, 0, 131073, 327680, 0, 131075, 327699, 0, 131073, 327700, 0, 131074, 327701, 0, 131074, 327702, 0, 131075, 458751, 0, 131073, 393216, 0, 131075, 393235, 0, 131073, 393236, 0, 131074, 393237, 0, 131074, 393238, 0, 131075, 524287, 0, 131073, 458752, 0, 131075, 458765, 0, 65537, 458766, 0, 65538, 458767, 0, 65538, 458768, 0, 65538, 458769, 0, 65538, 458770, 0, 65538, 458771, 0, 65541, 458772, 0, 131074, 458773, 0, 131074, 458774, 0, 131075, 589823, 0, 131073, 524288, 0, 131075, 524301, 0, 131073, 524302, 0, 131074, 524303, 0, 131074, 524304, 0, 131074, 524305, 0, 131074, 524306, 0, 131074, 524307, 0, 131074, 524308, 0, 131074, 524309, 0, 131074, 524310, 0, 131075, 655359, 0, 131073, 589824, 0, 65540, 589825, 0, 65538, 589826, 0, 65538, 589827, 0, 65538, 589828, 0, 65538, 589829, 0, 65538, 589830, 0, 65539, 589837, 0, 131073, 589838, 0, 131074, 589839, 0, 131074, 589840, 0, 131074, 589841, 0, 131074, 589842, 0, 131074, 589843, 0, 131074, 589844, 0, 131074, 589845, 0, 131074, 589846, 0, 131075, 720895, 0, 131073, 655360, 0, 131074, 655361, 0, 131074, 655362, 0, 131074, 655363, 0, 131074, 655364, 0, 131074, 655365, 0, 131074, 655366, 0, 131075, 655373, 0, 131073, 655374, 0, 131074, 655375, 0, 131074, 655376, 0, 131074, 655377, 0, 131074, 655378, 0, 131074, 655379, 0, 131074, 655380, 0, 131074, 655381, 0, 131074, 655382, 0, 131075, 786431, 0, 131073, 720896, 0, 131074, 720897, 0, 131074, 720898, 0, 131074, 720899, 0, 131074, 720900, 0, 131074, 720901, 0, 131074, 720902, 0, 65540, 720903, 0, 65538, 720904, 0, 65538, 720905, 0, 65538, 720906, 0, 65538, 720907, 0, 65538, 720908, 0, 65538, 720909, 0, 65541, 720910, 0, 131074, 720911, 0, 131074, 720912, 0, 131074, 720913, 0, 131074, 720914, 0, 131074, 720915, 0, 131074, 720916, 0, 131074, 720917, 0, 131074, 720918, 0, 131075, 851967, 0, 196609, 786432, 0, 196610, 786433, 0, 196610, 786434, 0, 196610, 786435, 0, 196610, 786436, 0, 196610, 786437, 0, 196610, 786438, 0, 196610, 786439, 0, 196610, 786440, 0, 196610, 786441, 0, 196610, 786442, 0, 196610, 786443, 0, 196610, 786444, 0, 196610, 786445, 0, 196610, 786446, 0, 196610, 786447, 0, 196610, 786448, 0, 196610, 786449, 0, 196610, 786450, 0, 196610, 786451, 0, 196610, 786452, 0, 196610, 786453, 0, 196610, 786454, 0, 196611 )
script = SubResource( 3 )

[node name="Teleporter" parent="." instance=ExtResource( 2 )]
position = Vector2( 118.451, 25.3206 )

[node name="Player" parent="." instance=ExtResource( 3 )]
position = Vector2( 18.25, 65.543 )
camera_follow = false
cam_limit_left = 0
cam_limit_top = 0
cam_limit_right = 217
cam_limit_bottom = 137
